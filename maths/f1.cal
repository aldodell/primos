define oniFirstSquare(from) {
  local s, i, j, f, m, p;
  j = from;
  i = from;
  f = 1;
  m = (from ^ 2) - (2 * from);
  printf("m=%d\n ", m);

  while (f == 1) {
    while (issq(j) == 0) {
      i += 2;
      j += i;
    }
    printf("i=%d j=%d\n ", i, j);
    p = ((i ^ 2) + (2 * i) - m) / 4;

    printf("p=%d\n ", p);
    if (issq(p)) {
      printf("\nj=%d.\n", j);
      f = 0;
    }
    i += 2;
    j += i;
  }
}

define oni(x, y) {
  local a, b, c, d, p1, p2, p, r, t1, t2;
  local f1, f2;
  p = x ^ y;

  b = 2;
  f1 = 1;
  f2 = 1;
  p1 = p - 8;

  while (f2) {
    p1 -= 2;
    f1 = 1;
    while (f1) {
      a = iroot(p1, b);
      if ((a ^ b) == p1) {
        f1 = 0;
        printf("a=%d\n", a);
      } else {
        p1 -= 2;
        if (p1 == 1) {
          return 0;
        }
      }
    }
	printf("%d %d\n", p1, (p1-t1));
	t1 = p1;
  }
}

/*
    d = 3;
    f1 = 1;
    p2 = p - p1;

    while (f1) {
      c = iroot(p2, d);
      if (c == 2) {
        f1 = 0;
      } else {
        if ((c ^ d) == p2) {
          r = p - (a ^ b) - (c ^ d);
          if (r == 0) {
            f2 = 0;
            f1 = 0;
          }

        } else {
          d++;
        }
      }
    }

    p1 -= 2;
  }
  printf("a^b=%d^%d=%d c^d=%d^%d=%d\n", a, b, p1, c, d, p2);

  printf("âˆ†=%d\n", r);
  */
